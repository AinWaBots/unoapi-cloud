version: '3'

services:
  base: &base
    build:
      dockerfile: develop.Dockerfile
    command: echo 'ok!'
    tty: true
    stdin_open: true
    volumes:
      - ./:/app
    working_dir: /app
    environment:
      NODE_ENV: development
      AMQP_URL: amqp://guest:guest@rabbitmq:5672
      BASE_URL: http://web:9876
      REDIS_URL: redis://redis:6379
      STORAGE_ENDPOINT: http://minio:9000
      GOOGLE_APPLICATION_CREDENTIALS: ${GOOGLE_APPLICATION_CREDENTIALS}
    depends_on:
      - redis
      - rabbitmq

  web:
    <<: *base
    command: yarn web-dev
    restart: on-failure
    ports:
      - 9876:9876

  worker:
    <<: *base
    command: sh -c 'wait-for redis:6379 rabbitmq:5672 -- yarn worker-dev'
    restart: on-failure

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq
    restart: on-failure

  redis:
    image: redis:7-alpine
    volumes:
      - redis:/data
    command: redis-server --appendonly yes
    ports:
      - 6379:6379
    restart: on-failure

  minio:
    image: quay.io/minio/minio:latest
    command: server --address ":9000" --console-address ":9001" /data
    ports:
      - 9000:9000
      - 9001:9001
    env_file: .env
    volumes:
      - storage:/data

  minio-mc:
    image: quay.io/minio/mc:latest
    env_file: .env
    depends_on:
    - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set local $STORAGE_ENDPOINT $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD;
      /usr/bin/mc mb local/$STORAGE_BUCKET_NAME;
      "

volumes:
  rabbitmq:
  redis:
  storage:
